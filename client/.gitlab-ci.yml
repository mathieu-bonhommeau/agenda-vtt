image: node:lts

stages:
  - validation
  - test
  - build
  - deploy


.modules: &modules
  - cd client && npm install

lint:
  stage: validation
  allow_failure: true
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always
    - when: never
  before_script:
    - *modules
  script:
    - npm run lint:check

test:
  stage: test
  needs: [ ]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always
    - when: never
  before_script:
    - *modules
  script:
    - npm run test

build-frontend:
  image: node:20-alpine
  stage: build
  needs: [lint, test]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always
    - when: never
  before_script:
    - *modules
  script:
    - npm run build
  artifacts:
    paths:
      - client/out/

deploy-frontend-production:
  image: docker:24.0.5
  stage: deploy
  environment:
    name: production
  services:
    - docker:24.0.5-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    FRONTEND_TAG: ${CI_REGISTRY_IMAGE}/client:${CI_ENVIRONMENT_NAME}
  needs: [build-frontend]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always
    - when: never
  before_script:
      - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --no-cache -f ./docker/client/client.dockerfile -t ${FRONTEND_TAG} .
    - docker push ${FRONTEND_TAG}